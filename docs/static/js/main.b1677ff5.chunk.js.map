{"version":3,"sources":["components/Header.tsx","components/Footer.tsx","components/Menu.tsx","components/LanguageSelector.tsx","containers/Home.tsx","containers/illustration/Illustration.tsx","containers/illustration/Drawings.tsx","containers/illustration/Paintings.tsx","containers/illustration/Digital.tsx","containers/GraphicDesign/GraphicDesign.tsx","containers/GraphicDesign/Ekotarriko.tsx","containers/GraphicDesign/Fisioesthetic.tsx","containers/GraphicDesign/Logos.tsx","containers/GraphicDesign/Talita.tsx","containers/About.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","Footer","Menu","to","React","LanguageSelector","Home","Illustration","Drawings","Paintings","Digital","GraphicDesign","EkotarriKo","Fisioesthetic","Logos","Talita","About","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b1677ff5.chunk.js","sourcesContent":["import * as React from 'react'\r\n\r\nfunction Header  () {\r\n  return (\r\n    <h1>\r\n      Header\r\n    </h1>\r\n  )\r\n}\r\nexport default Header","import * as React from 'react'\r\n\r\nfunction Footer  () {\r\n  return (\r\n    <h1>\r\n      Footer\r\n    </h1>\r\n  )\r\n}\r\nexport default Footer","import * as React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default class Menu extends React.Component {\r\n  public render() {\r\n    return (\r\n      <>\r\n        <Link to=\"./illustration\">Illustration</Link>\r\n        <Link to=\"./graphic-design\">Graphic Design</Link>\r\n        <Link to=\"./about\">About me</Link>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import * as React from 'react'\r\n\r\nfunction LanguageSelector  () {\r\n  return (\r\n    <h1>\r\n      Language Selector\r\n    </h1>\r\n  )\r\n}\r\nexport default LanguageSelector","import * as React from 'react';\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport Menu from \"../components/Menu\";\r\nimport LanguageSelector from \"../components/LanguageSelector\";\r\nexport default class Home extends React.Component {\r\n  public render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Footer />\r\n        <Menu />\r\n        <LanguageSelector />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport Header from \"../../components/Header\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Menu from \"../../components/Menu\";\r\nimport LanguageSelector from \"../../components/LanguageSelector\";\r\nexport default class Illustration extends React.Component {\r\n    public render(){\r\n        return (\r\n            <>\r\n      <Header />\r\n      <Footer />\r\n      <Menu />\r\n      <LanguageSelector />\r\n    </>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport Header from \"../../components/Header\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Menu from \"../../components/Menu\";\r\nimport LanguageSelector from \"../../components/LanguageSelector\";\r\nexport default class Drawings extends React.Component {\r\n    public render(){\r\n        return (\r\n            <>\r\n      <Header />\r\n      <Footer />\r\n      <Menu />\r\n      <LanguageSelector />\r\n    </>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport Header from \"../../components/Header\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Menu from \"../../components/Menu\";\r\nimport LanguageSelector from \"../../components/LanguageSelector\";\r\nexport default class Paintings extends React.Component {\r\n    public render(){\r\n        return (\r\n            <>\r\n      <Header />\r\n      <Footer />\r\n      <Menu />\r\n      <LanguageSelector />\r\n    </>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport Header from \"../../components/Header\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Menu from \"../../components/Menu\";\r\nimport LanguageSelector from \"../../components/LanguageSelector\";\r\nexport default class Digital extends React.Component {\r\n    public render(){\r\n        return (\r\n            <>\r\n      <Header />\r\n      <Footer />\r\n      <Menu />\r\n      <LanguageSelector />\r\n    </>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport Header from \"../../components/Header\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Menu from \"../../components/Menu\";\r\nimport LanguageSelector from \"../../components/LanguageSelector\";\r\nexport default class GraphicDesign extends React.Component {\r\n    public render(){\r\n        return (\r\n            <>\r\n      <Header />\r\n      <Footer />\r\n      <Menu />\r\n      <LanguageSelector />\r\n    </>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport Header from \"../../components/Header\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Menu from \"../../components/Menu\";\r\nimport LanguageSelector from \"../../components/LanguageSelector\";\r\nexport default class EkotarriKo extends React.Component {\r\n    public render(){\r\n        return (\r\n            <>\r\n      <Header />\r\n      <Footer />\r\n      <Menu />\r\n      <LanguageSelector />\r\n    </>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport Header from \"../../components/Header\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Menu from \"../../components/Menu\";\r\nimport LanguageSelector from \"../../components/LanguageSelector\";\r\nexport default class Fisioesthetic extends React.Component {\r\n    public render(){\r\n        return (\r\n            <>\r\n      <Header />\r\n      <Footer />\r\n      <Menu />\r\n      <LanguageSelector />\r\n    </>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport Header from \"../../components/Header\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Menu from \"../../components/Menu\";\r\nimport LanguageSelector from \"../../components/LanguageSelector\";\r\nexport default class Logos extends React.Component {\r\n    public render(){\r\n        return (\r\n            <>\r\n      <Header />\r\n      <Footer />\r\n      <Menu />\r\n      <LanguageSelector />\r\n    </>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport Header from \"../../components/Header\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Menu from \"../../components/Menu\";\r\nimport LanguageSelector from \"../../components/LanguageSelector\";\r\nexport default class Talita extends React.Component {\r\n    public render(){\r\n        return (\r\n            <>\r\n      <Header />\r\n      <Footer />\r\n      <Menu />\r\n      <LanguageSelector />\r\n    </>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport Header from \"../components/Header\"\r\nimport Footer from \"../components/Footer\"\r\nimport Menu from \"../components/Menu\"\r\nimport LanguageSelector from \"../components/LanguageSelector\"\r\nexport default class About extends React.Component {\r\n  public render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Footer />\r\n        <Menu />\r\n        <LanguageSelector />\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import * as React from \"react\";\nimport Home from \"./containers/Home\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Illustration from \"./containers/illustration/Illustration\";\nimport Drawings from \"./containers/illustration/Drawings\";\nimport Paintings from \"./containers/illustration/Paintings\";\nimport Digital from \"./containers/illustration/Digital\";\nimport GraficDesign from \"./containers/GraphicDesign/GraphicDesign\";\nimport Ekotarriko from \"./containers/GraphicDesign/Ekotarriko\";\nimport Fisioesthetic from \"./containers/GraphicDesign/Fisioesthetic\";\nimport Logos from \"./containers/GraphicDesign/Logos\";\nimport Talita from \"./containers/GraphicDesign/Talita\";\nimport About from \"./containers/About\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/illustration\">\n        <Illustration />\n      </Route>\n      <Route path=\"/illustration/drawings\">\n        <Drawings />\n      </Route>\n      <Route path=\"/illustration/paintings\">\n        <Paintings />\n      </Route>\n      <Route path=\"/illustration/digital\">\n        <Digital />\n      </Route>\n      <Route path=\"/graphic-design\">\n        <GraficDesign />\n      </Route>\n      <Route path=\"/graphic-design/ekotarriko\">\n        <Ekotarriko />\n      </Route>\n      <Route path=\"/graphic-design/fisioesthetic\">\n        <Fisioesthetic />\n      </Route>\n      <Route path=\"/graphic-design/logos\">\n        <Logos />\n      </Route>\n      <Route path=\"/graphic-design/talita\">\n        <Talita />\n      </Route>\n      <Route path=\"/about\">\n        <About />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}